// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SkillAssessor.EmployeeService.Data;

#nullable disable

namespace SkillAssessor.EmployeeService.Data.Migrations
{
    [DbContext(typeof(EmployeeDbContext))]
    partial class EmployeeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SkillAssessor.EmployeeService.Entity.Employees.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<DateOnly>("EmploymentDate")
                        .HasColumnType("date");

                    b.Property<Guid?>("InterviewRequestId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("InterviewRequestId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("SkillAssessor.EmployeeService.Entity.InterviewRequests.InterviewRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EmployeeId1")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("InterviewDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("SkillLevelId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("EmployeeId1");

                    b.HasIndex("SkillLevelId");

                    b.ToTable("InterviewRequests");
                });

            modelBuilder.Entity("SkillAssessor.EmployeeService.Entity.SkillLevels.SkillLevel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<int>("LevelNumber")
                        .HasColumnType("integer");

                    b.Property<string>("SkillTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("SkillLevels");
                });

            modelBuilder.Entity("SkillAssessor.EmployeeService.Entity.Employees.Employee", b =>
                {
                    b.HasOne("SkillAssessor.EmployeeService.Entity.InterviewRequests.InterviewRequest", null)
                        .WithMany("Interviewers")
                        .HasForeignKey("InterviewRequestId");
                });

            modelBuilder.Entity("SkillAssessor.EmployeeService.Entity.InterviewRequests.InterviewRequest", b =>
                {
                    b.HasOne("SkillAssessor.EmployeeService.Entity.Employees.Employee", null)
                        .WithMany("InterviewRequests")
                        .HasForeignKey("EmployeeId");

                    b.HasOne("SkillAssessor.EmployeeService.Entity.Employees.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkillAssessor.EmployeeService.Entity.SkillLevels.SkillLevel", "SkillLevel")
                        .WithMany()
                        .HasForeignKey("SkillLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("SkillLevel");
                });

            modelBuilder.Entity("SkillAssessor.EmployeeService.Entity.SkillLevels.SkillLevel", b =>
                {
                    b.HasOne("SkillAssessor.EmployeeService.Entity.Employees.Employee", null)
                        .WithMany("Skills")
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("SkillAssessor.EmployeeService.Entity.Employees.Employee", b =>
                {
                    b.Navigation("InterviewRequests");

                    b.Navigation("Skills");
                });

            modelBuilder.Entity("SkillAssessor.EmployeeService.Entity.InterviewRequests.InterviewRequest", b =>
                {
                    b.Navigation("Interviewers");
                });
#pragma warning restore 612, 618
        }
    }
}
